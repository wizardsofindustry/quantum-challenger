---
#######################################################################
#
#   GENERAL PROJECT CONFIGURATION
#
#######################################################################
project:
  version: 1.0.0
  name: Challenger Verification Service (CVS)

# This section specifies additional properties of the deployment
# environment for the challenger service.
deployment:

  # Configures the deployment environments. Only environments specified
  # in this list may be used to roll out the application(s) using
  # the deployment mechanisms supported by the Quantum Service
  # Assembler.
  environments:
  - name: 

  # Specifies the deployment system used to bring this app to a specific
  # environment. Supported systems are 'kubernetes'.
  using: kubernetes

  # The deployment realm is either 'perimeter' (public-facing
  # services), 'citadel' (core internal service), business
  # (services implementing the business domain) or 'auxilary'
  # (supporting services).
  realm: citadel


k8s:

  # Common secrets that are injected into the containers
  # irrespective of the deployment environment, name or
  # role.
  secrets:
    env: []

  # Specifies the namespace in the Kubernetes cluster where all
  # objects related to this project are created.
  namespace: citadel

  # Specifies all deployments of this application.
  deployments:
  - role: api
    enabled: true
    secrets:
      env: []
    ports:
    - port: 8443
      protocol: TCP
    pull_secret: dockerhub.wizards

  # A list of commands that are created to Job objects in the
  # application container.
  jobs:
  - name: migrate
    enabled: true
    command:
    - alembic
    - upgrade
    - head
    env:
    - name: CHALLENGER_ROLE
      value: default
    deadline: 120
    pull_secret: dockerhub.wizards

# This section describes the characteristics of the SG generated
# application.
app:

  # Indicates that the application requires a relational database systen. Quantum
  # services are assumed to connect to one RDBMS only.
  rdbms: true

  # Specifies the roles that the application has. Valid values are
  # 'http', 'handler', 'runner', 'listener' or 'scheduler'.
  roles:
  - http


# Defines all controllers used to handle HTTP requests. Do not use this
# section when the Quantum service is configured as a Django application.
controllers: []


#######################################################################
##
##  REPOSITORY DEFINITIONS
##
#######################################################################
repositories: []


#######################################################################
##
##  TASK DEFINITIONS
##
#######################################################################


tasks:
  # Set this value to 'yes' to enable and compile the task boilerplate
  # code.
  enabled: no
  functions: []


django: null

# Configures the application to serve content over the World Wide
# Web e.g. a website.
www: false


# Basic Python package configuration and settings.
package:
  language: python

  # This is the name of the Python module that contains the application
  # code, and is also used as a general identifier for this service.
  name: challenger

  # Python module requirements from PyPi. Specified as in a requirements.txt,
  # file.
  requirements:
  - phonenumbers==8.9.10


# The i18n section specifies all settings related to internationalization
# (i18n) and localization (l10n).
i18n:

  # Globally enable or disable internationalization for this project.
  enabled: true

  # The i18n.default_language setting specifies the language default
  # for all components in the Quantum service.
  default_language: en

  # Specifies all languages that may be selected either by the end-user
  # or runtime configuration variables.
  languages:
  - name: English
    code: en
    enabled: true

  # Indicates that application URLs should be translated, if
  # applicable.
  translate_urls: true

  # Enables or disables the Javascript i18n catalog; it is up to
  # the web framework to decide how to serve this to the client.
  enable_javascript: false


# Application environment settings and variables.
environ:
  prefix: true # Prefix environment variables with CHALLENGER_

  # Set the public ip address of the default network interface as
  # an environment variable. Note that this assumes that the IP
  # address does not changes during the application runtime.
  public_ip: no

  variables:
  - name: SECRET_KEY
    default: b9d3fc670302b2191fd341814ee98a13ec2070657f816cf2f93d2dc282277657
    comment: Symmetric key for cryptographic operations.
    secret: true
  - name: DEBUG
    default: '1'
    type: "switch"
    isglobal: false
    comment: Run the application in debug mode.
  - name: IOC_DEFAULTS
    default: /etc/challenger/ioc.conf
    comments: >
      Specifies the configuration file holding defaults for the inversion-of-control
      context.
  - name: IOC_DIR
    default: /etc/challenger/ioc.conf.d/
    comments: >
      Specifies a directory where the application will look for inversion-of-control
      configuration files.
  - name: RDBMS_DSN
    default: postgresql+psycopg2://challenger:challenger@rdbms:5432/challenger
    container: sqlite:///project.db
    secret: true
  - name: GIT_COMMIT
    comments: >
      The SHA-1 hash of the current Git commit.
  - name: HTTP_ADDR
    default: '0.0.0.0'
    comment: Listen address for the HTTP interface.
  - name: HTTP_PORT
    default: '8443'
    comment: Bind port for the HTTP interface.
  - name: LOGLEVEL
    default: 'INFO'
    comment: >
      Specifies the loglevel at application runtime.
    isglobal: false
  - name: ROLE
    default: default
    isglobal: false
    comment: >
      For multi-roled applications, this environment variable defines in which
      role it should operate.
  - name: MESSAGEBIRD_ACCESS_KEY
    default: ""
    type: "literal"
    secret: false


# The application is currently not configured as an event listener. To
# enable this feature, add the 'listener' role to the #/app/roles list.
listener:

  # Lists all events that the application subscribes to. This does not
  # imply that it knows how to handle them (i.e., has a handler function
  # configured), only that it wants to receive them.
  events: []

  # The list below configures the event handlers that are run on each
  # incoming event message (individual handlers may choose to drop
  # messages). Each item in the list is a dictionary, having at least
  # a `qualname` member, specifying the Python qualified name (e.g.
  # import path) to the event handler *class*. For more information on
  # event handler classes, refer to the Sovereign Quantum documentation.
  handlers:
  - qualname: sq.event.NullEventHandler

  # Specifies the channel from which this application will receive
  # its event messages. Event messages are assumed to be routed
  # according to the criteria specified above.
  channel: challenger.events.ingress


# Security related settings.
security:

  # A generic application secret that may be used, for example, to generate
  # signed cookies or other message signatures. This value MUST NOT be used in
  # production, and exists for development and testing purposes only.
  secret_key: b9d3fc670302b2191fd341814ee98a13ec2070657f816cf2f93d2dc282277657

  tls:

    # A snakeoil X.509 certificate that is used to enable Transport Level Security (TLS)
    # in non-production environments. Like `secret_key`, this configuration MUST NOT
    # be used in production. Additional hostnames may be specified in the `hostnames`
    # section.
    hostnames:
    - challenger

    crt: |
      -----BEGIN CERTIFICATE-----
      MIIByzCCATSgAwIBAgICA+gwDQYJKoZIhvcNAQELBQAwFTETMBEGA1UEAwwKY2hh
      bGxlbmdlcjAeFw0xODA4MDkyMDAzMDFaFw0yODA4MDYyMDAzMDFaMBUxEzARBgNV
      BAMMCmNoYWxsZW5nZXIwgZ8wDQYJKoZIhvcNAQEBBQADgY0AMIGJAoGBAMKHUHak
      YkCjW+2hvuJSCEaVjjopSMTNko1OFZbS7XHVpZmkguh92pDzPhhx2UXndnwLlI30
      Ql8ADlIb50ooIopgz3D1eehBvLrPUjsHjegaWKna8BJos8vkxydgOI/oiU2N2RTL
      lrtHkaJ80BV7+mdX0KCDDgNKBZ8hj89NMVjvAgMBAAGjKjAoMA8GA1UdEwQIMAYB
      Af8CAQAwFQYDVR0RBA4wDIIKY2hhbGxlbmdlcjANBgkqhkiG9w0BAQsFAAOBgQAq
      PanaaiR7iFVAXE89y2t2batX0qDDw/yYCVuufDdEcYZDZjb3yJhlnmfCVa9lFxoB
      JtLFkPg0Duvg2vRLcR7FVCEsgmpHLGC+7l4BaFpfUd7+kK0MnUShWFJ72/L+M1CS
      KF7TxCn83KD3KVEWFSYwum2TOR38taZmW/elCNyg9w==
      -----END CERTIFICATE-----

    key: |
      -----BEGIN RSA PRIVATE KEY-----
      MIICXQIBAAKBgQDCh1B2pGJAo1vtob7iUghGlY46KUjEzZKNThWW0u1x1aWZpILo
      fdqQ8z4YcdlF53Z8C5SN9EJfAA5SG+dKKCKKYM9w9XnoQby6z1I7B43oGlip2vAS
      aLPL5McnYDiP6IlNjdkUy5a7R5GifNAVe/pnV9Cggw4DSgWfIY/PTTFY7wIDAQAB
      AoGBALccHHexgPMLUqs7B62OPlAC02CYH/Fw+LSefd/9KJlw3HLl0nv6i9TJwvfL
      oxQULwnQ9MMy248FRHWx4mOBqBAo0fvHdh1pIbW9RTUUmTbhGdpIkPBJubWg3TNo
      Op8ZqJRO26HIKrGYOy43rek2sUMotsMnKz3hTp6O7vL8H62hAkEA7iXPBcyEgsxs
      1H1fmmIoLCpjhH+5Az80nMiJMlYwOI2yuJ9geUq9vIM5TJ1jlhHkTqGofCbuG1Ge
      11LffYokBwJBANEcbfu4bKeHfn63RIqM1PXOFduxCm54ATbnASdk1l65IB4v5mKg
      3vr5ASQyQnc06xIsFubQnqmTecflPFIC+dkCQCYv/+NxKSqEN0tXk1YBOWnjnjOn
      +3Xu07P0YDOnKHJZHniGbgTlHEm3TR/g+RAebFrDh23pHDNbQjpK+rV5yk8CQH0z
      f2pynqOjzYoDIset0KgnrxCtrKg9s8RyhU9X4b4vK1rHpTIyTa+IvTU13nPPPFvS
      CBhEmmq/wO99giM8YukCQQC7FY5CbTkS6DpbCuC0DnesTSEBWC/G4MGD8/oD+6KT
      Bucn9fe/6B97l9a85Tw3wzxZYsF87FGKQTmJspnKRB2W
      -----END RSA PRIVATE KEY-----



# A list of Quantum services that the application requires.
#requires:
#- url: git+https://github.com/wizardsofindustry/quantum-usr.git


# Configuration related to the automated testing of the Quantum
# service.
testing:
  min_coverage: 100
  lint: false


#######################################################################
##
##  CI/CD CONFIGURATION
##
#######################################################################
ci:

  # Enforces that commits with changes to the Quantumfile are signed
  # by trusted comitters.
  signed_quantumfile: true

  # Indicates that the CI/CD server must verify the GPG signature of
  # commit tags before deploying the latest build to a certain
  # environment.
  #
  # Setting ci.signed_deployments to true also implies that a commit
  # tag is mandatory in order to deploy.
  signed_deployments: true

  # Instructs the CI/CD pipeline to build frontend assets on the slave
  # instead of inside the container image.
  build_assets: false

  ssh:
    # Identifies the SSH credentials that are used to access protected
    # resources.
    credentials: null


# Docker configuration.
docker:

  #: Indicates if the code must be linted when building the
  #: Docker container.
  lint: false

  # The base image for the application container. This value
  # may be changed to use a custom image, instead of the
  # default Quantum base image.
  base: wizardsofindustry/quantum:latest

  # Specify arbitrary filepaths that are copied to the container.

  # Specifies the Docker repository that is used for
  # this application, used by development tooling and
  # the CI/CD pipeline.
  repository: wizardsofindustry/quantum-challenger

  # Items to add to the .dockerignore file.
  ignore: []

  # CI/CD configuration for containerization and image
  # publication.
  ci:
    # The credentials that the CI/CD pipeline may use to
    # login and publish to a Docker registry.
    credentials_id: wizards.dockerhub

    # Indicates if the CI pipeline may use VCS tags to tag
    # containers.
    use_tags: true

    # Specifies the branches that will trigger a container build
    # by default.
    build_branches:
    - name: master
      tag: latest
      always_deploy: false
    - name: develop
      tag: staging
      env: staging
      deployment: staging
      always_deploy: false
    - pattern: "^(release|version|sprint)-.*$"
    - pattern: "^(hotfix|fix)-.*$"
    - pattern: "^(feature|task)-.*$"




# This section contains SG related settings and should not be modified under
# normal circumstances.
sg:

  # Specifies the SG project type. Allowed values are: service, system or infra.
  type: service
  dirname: .sg


# Configuration file format version. Changing this will have dire
# consequences.
version: "1"


#######################################################################
##
##  CODE QUALITY
##
#######################################################################
lint:
  javascript: false
  python: false
  scss: false
  yaml: false


#######################################################################
#
#   LANGUAGE SPECIFIC CONFIGURATION
#
#######################################################################
