"""Contains the base class for :class:`ChallengeCtrl`."""
import ioc
from sq.ctrl import EndpointCtrl

class BaseChallengeCtrl(EndpointCtrl):
    """Generated by SG to serve as an abstract base class for:

        challenger.app.ctrl.ChallengeCtrl

    This class encapsulates external dependencies (such as the inversion-of-control
    requirements) and specifies the interface for the concrete implementation.
    """
    service = ioc.class_property('ChallengeService')

    async def post(self, request, *args, **kwargs):
        """This method specifies the signature for :meth:`ChallengeCtrl.post()`
        and should be implemented in the following file:

            ./challenger/ctrl/challenge/impl.py
        """
        raise NotImplementedError("Subclasses must override this method.")

    async def put(self, request, *args, **kwargs):
        """This method specifies the signature for :meth:`ChallengeCtrl.put()`
        and should be implemented in the following file:

            ./challenger/ctrl/challenge/impl.py
        """
        raise NotImplementedError("Subclasses must override this method.")


#pylint: skip-file
# !!! SG MANAGED FILE -- DO NOT EDIT -- VERSION:  !!!
